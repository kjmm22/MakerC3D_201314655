package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("SE ENCONTRARON ERRORES");
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL, IGUAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal TokenC3D OR, AND, NOT, IGUALACION, DIFERENTE, MAYOR, MENOR, MAYORIGUAL, MENORIGUAL;
nonterminal NodoC3D inicial, expresion;

precedence left OR;
precedence left AND;
precedence right NOT;
precedence left IGUALACION, DIFERENTE;
precedence left MAYOR, MENOR, MAYORIGUAL, MENORIGUAL;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D("Etiquetas Verdaderas: \n" + exp.getV()+":\n");
                        ControlC3D.agregarC3D("Etiquetas Falsas: \n"+ exp.getF()+":\n");
                    :};

expresion   ::= expresion:izq OR 
                    {:
                        String c3d=izq.getF()+":\n";
                        ControlC3D.agregarC3D(c3d);
                    :}
                    expresion:der
                    {: 
                        String v = izq.getV()+":\n"+der.getV();
                        String f = der.getF();
                        RESULT = new NodoC3D(v, f); 
                    :}
            |   expresion:izq AND 
                    {:
                        String c3d=izq.getV()+":\n";
                        ControlC3D.agregarC3D(c3d);
                    :}
                    expresion:der
                    {: 
                        String v = der.getV();
                        String f = izq.getF()+":\n"+der.getF();
                        RESULT = new NodoC3D(v, f); 
                    :}
            |   NOT expresion:exp
                    {: 
                        RESULT = new NodoC3D(exp.getF(), exp.getV()); 
                    :}
                
            |   expresion:izq IGUALACION expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " == "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq DIFERENTE expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " != "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq MAYOR expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " > "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq MENOR expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " < "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq MAYORIGUAL expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " >= "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq MENORIGUAL expresion:der
                    {: 
                        String v = ControlC3D.generaEtiqueta();
                        String f = ControlC3D.generaEtiqueta();
                        String c3d = "if ("+izq.getCad() + " <= "+ der.getCad() + ") then goto "+v+"\ngoto "+f+"\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(v,f);
                    :}
            |   expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            |   IGUAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;